name: CI Workflow

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Node.js environment for Playwright
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      # Install dependencies for Playwright (skip browsers)
      - name: Install dependencies
        run: npm ci
        working-directory: ./playwright  # Adjusted for your Playwright directory

      # Install only WebKit browser for Playwright
      - name: Install WebKit browser
        run: npx playwright install webkit
        working-directory: ./playwright  # Adjusted for your Playwright directory

      # Run Playwright tests
      - name: Run Playwright tests
        run: npx playwright test e2e.spec.js
        working-directory: ./playwright  # Adjusted for your Playwright directory

      # Upload Playwright test results
      - name: Upload Playwright test results
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: ./playwright/playwright-report/
          retention-days: 30

  deploy:
    runs-on: ubuntu-latest
    needs: test
    timeout-minutes: 60
    if: success()  # Only run this job if Playwright tests pass
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      # Terraform initializations
      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform  # Adjusted for your Terraform directory

      # Terraform apply to deploy the infrastructure
      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./terraform  # Adjusted for your Terraform directory
